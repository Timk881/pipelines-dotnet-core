name: '[PLC BuR] CI UnitTest'
trigger: 
  branches:
    include:
     - feature/Unittest/*
     - release/Unittest/*
    exclude:
     - develop
  paths:
    include: 
       - Logical/UnitTesting
       - Physical/Basis_UnitTest
       - tools/ci/steps/Unittest.yaml
    exclude: 
      - '*.txt'
      - '*.md'
      - '*.exe'
      - '*.ps1'
      - '*.pdf'
      - '*.xlsx'
      - '*.docx'
schedules:
- cron: "0 2 * * 1-5"
  displayName: Daily night tests
  branches:
    include:
      - develop
  always: true
pool:
  name: 'ErsaOfficePLC'



jobs:

#======================================================================
# Prepare Unittest project
#----------------------------------------------------------------------

# printing different variables for a better debuging
- job: 'Debug'
  displayName: 'Printing debug variables'
  steps:
  - powershell: |
      Write-Host "Build.SourcesDirectory is $env:BUILD_SOURCESDIRECTORY"
      Write-Host "Build.BinariesDirectory is $env:BUILD_BINARIESDIRECTORY"
      Write-Host "Agent.HomeDirectory is $env:AGENT_HOMEDIRECTORY"
    displayName: 'printing predefined variables'
    env:
      BUILD_SOURCESDIRECTORY: $Build.SourcesDirectory
      BUILD_BINARIESDIRECTORY: $Build.BinariesDirectory
      AGENT_HOMEDIRECTORY: $Agent.HomeDirectory

# prepare pipeline
- job: 'Preparing'
  displayName: 'Prepare pipeline'
  dependsOn: Debug
  steps:
  # delete Binaries and Temp folders
  - powershell: .\tools\ci\scripts\Prepare\Prepare_Pipeline.ps1 -BinariesFolder $env:BUILD_BINARIESDIRECTORY
    env:
      BUILD_BINARIESDIRECTORY: $Build.BinariesDirectory
    displayName: 'Delete binaries folders'
  - powershell: .\tools\ci\scripts\Unittest\Prepare_Unittests.ps1 -ResultFolder $env:BUILD_BINARIESDIRECTORY
    env:
      BUILD_BINARIESDIRECTORY: $Build.BinariesDirectory
    displayName: 'prepare unittest folders'

#======================================================================
# Arranging the testobject and the Unittests
#----------------------------------------------------------------------

# exchange project and create testobject
- job: 'ExchangeCreate_Project'
  displayName: 'Exchange and create testobject'
  dependsOn: Preparing
  steps:
    # exchange unittest project
    - powershell: .\tools\ci\scripts\Prepare\Exchange_otherProject.ps1 -Machinetype UnitTest -SourcesDirectory $env:BUILD_SOURCESDIRECTORY
      env:
        BUILD_SOURCESDIRECTORY: $Build.SourcesDirectory
      displayName: 'Exchange unittest project'
    # create the testobject
    - powershell: .\tools\ci\scripts\Unittest\sccx\sccx_TestObject.ps1 -Workspace $env:BUILD_SOURCESDIRECTORY -sccxPath ".\tools\sccx" -exportPath $env:BUILD_BINARIESDIRECTORY
      env:
        BUILD_SOURCESDIRECTORY: $Build.SourcesDirectory
        BUILD_BINARIESDIRECTORY: $Build.BinariesDirectory
      displayName: 'Create testobject'

# compiling the testobject
- job: 'Compiling'
  displayName: 'Compiling project'
  dependsOn: ExchangeCreate_Project
  steps:
    - powershell: |
        .\tools\ci\scripts\Unittest\CompileTestObject.ps1 -Project Basis_UnitTest -ToolPath "D:\Ersa\Tools\BrAutomation" -ToolVersion AS412 -SourcesDirectory $env:BUILD_SOURCESDIRECTORY -BinaryDirectory $env:BUILD_BINARIESDIRECTORY
      env:
        BUILD_SOURCESDIRECTORY: $Build.SourcesDirectory
        BUILD_BINARIESDIRECTORY: $Build.BinariesDirectory

# create PIL for Building a ARsim
- job: 'Create_PIL'
  displayName: 'Create the ARsim PIL'
  dependsOn: Compiling
  steps:
  - powershell: .\tools\ci\scripts\PILs\Create\ARsim.ps1 -BinaryDirectory $env:BUILD_BINARIESDIRECTORY -Project Basis_UnitTest -CpuType PC -StartSimulation
    env:
      BUILD_BINARIESDIRECTORY: $Build.BinariesDirectory

#======================================================================
# Testing and Evaluate project
# building and starting simulation environment and unittesting incl. code coverage
#----------------------------------------------------------------------

# start the ARsim and working with the localhost
- job: 'Work_with_simulation'
  displayName: 'Work with simulation'
  dependsOn: Create_PIL
  steps:
  # execute PIL
  - powershell: .\tools\ci\scripts\Unittest\BuildAndStartARsim.ps1 -Toolpath "D:\Ersa\Tools\BrAutomation\PVI\V4.12\PVI\Tools\PVITransfer." -BinaryDirectory $env:BUILD_BINARIESDIRECTORY
    displayName: 'Build and Start ARsim'
    env:
      BUILD_BINARIESDIRECTORY: $Build.BinariesDirectory
  # test connection
  - powershell: Invoke-WebRequest -Uri http://127.0.0.1/sdm/index.html -UseBasicParsing
    displayName: 'Testing connection to ARsim'
  # unittesting
  - template: ..\steps\Unittest.yaml
  # start XML export from simulation
  - powershell: |
      .\tools\ci\scripts\Unittest\sccx\ExportXML.ps1 -SourcesDirectory $env:BUILD_SOURCESDIRECTORY -BinaryDirectory $env:BUILD_BINARIESDIRECTORY -Toolpath "D:\Ersa\Tools\BrAutomation\PVI\V4.12\PVI\Tools\PVITransfer."
    displayName: 'XML export'
    env:
      BUILD_SOURCESDIRECTORY: $Build.SourcesDirectory
      BUILD_BINARIESDIRECTORY: $Build.BinariesDirectory

# create the code coverage result file
- job: 'Create_result_file'
  displayName: 'Create result file'
  dependsOn: Work_with_simulation
  steps:
  - powershell: |
      .\tools\ci\scripts\Unittest\sccx\sccx_Result.ps1 -Workspace $env:BUILD_SOURCESDIRECTORY -CoverageFile $env:BUILD_BINARIESDIRECTORY
    env:
      BUILD_SOURCESDIRECTORY: $Build.SourcesDirectory
      BUILD_BINARIESDIRECTORY: $Build.BinariesDirectory
    displayName: 'Create result file of code coverage'

# move result file to publish folder
- job: 'Move_result_file'
  displayName: 'Move result file to publish folder'
  dependsOn: Create_result_file
  steps:
  - powershell: Move-Item -Path "$env:BUILD_BINARIESDIRECTORY\CoverageResult.xml" -Destination "$env:BUILD_BINARIESDIRECTORY\TestResults\Cobertura"
    env:
      BUILD_BINARIESDIRECTORY: $Build.BinariesDirectory
    displayName: 'Move result file'

#======================================================================
# Publish TestResults
#----------------------------------------------------------------------

#publish all test results
- job: 'Unittests'
  displayName: 'Publish unittest results'
  dependsOn: Move_result_file
  steps:
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/TestResults/TEST_*.xml'
      searchFolder: '$(Build.BinariesDirectory)'

#publish code coverage result
- job: 'CodeCoverage'
  displayName: 'Publish code coverage result'
  dependsOn: Unittests
  steps:
  - task: PublishCodeCoverageResults@2
    inputs:
      summaryFileLocation: '$(Build.BinariesDirectory)/TestResults/Cobertura/CoverageResult.xml'
      pathToSources: '$(System.DefaultWorkingDirectory)/Logical/'
      